openapi: 3.0.0
info:
    version: 1.0.0
    title: FriendRaterApi
    contact:
        email: Hello@SimonPrinz.me
tags:
    - name: Authentication
      description: Login and Registration
    - name: Search
      description: Search for users
    - name: Profile
      description: |
security:
    - basicAuth: []
paths:
    /login:
        get:
            tags:
                - Authentication
            summary: Checks the credentials of the user against the database
            description: 'Only needs the "Authorization: Basic xyz" header'
            operationId: login
            responses:
                200:
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiErrorResponse'
    /register:
        post:
            tags:
                - Authentication
            summary: Creates a new user account
            description: |
            operationId: register
            security: []
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterRequest'
            responses:
                201:
                    description: Created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SuccessResponse'
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiErrorResponse'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiErrorResponse'
                503:
                    description: Temporary error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FailureResponse'
    /activate:
        get:
            tags:
                - Authentication
            summary: Activates the user account
            description: |
            operationId: activate
            security: []
            parameters:
                - in: query
                  name: u
                  description: Username
                  schema:
                      type: string
                      minLength: 3
                      maxLength: 16
                  required: true
                - in: query
                  name: h
                  description: Additional paramter provided in the activation email
                  schema:
                    type: string
                  required: true
            responses:
                200:
                    description: Ok
                    content:
                        text/html: {}
                400:
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiErrorResponse'
    /search:
        get:
            tags:
                - Search
            summary: Searches for users by username, name and email
            description: |
            operationId: search
            parameters:
                - in: query
                  name: q
                  description: Search parameter
                  schema:
                      type: string
                      minLength: 3
                  required: true
            responses:
                200:
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchResponse'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiErrorResponse'
    /numbersearch:
        post:
            tags:
                - Search
            summary: Searches for users by phone number
            description: |
            operationId: numbersearch
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                                example: '+49123456789'
            responses:
                200:
                    description: Ok
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchResponse'
                401:
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiErrorResponse'
    /profile:
        get:
            tags:
                - Profile
            summary: Gets the data to display a profile
            description: |
            operationId: profile
            parameters:
                - in: query
                  name: id
                  description: Id of the user or empty for the own
                  schema:
                      type: string
                      default: |
            responses:
                200:
                    description: Ok
                    content:
                        application/json:
                            schema:
                                type: string
                404:
                    description: User not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiErrorResponse'
                500:
                    description: Server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApiErrorResponse'
servers:
    - url: {{ baseUrl }}
components:
    securitySchemes:
        basicAuth:
            type: http
            scheme: basic
    schemas:
        LoginResponse:
            type: object
            properties:
                ok:
                    type: boolean
                data:
                    type: object
                    properties:
                        name:
                            type: string
        RegisterRequest:
            type: object
            properties:
                username:
                    type: string
                    required: true
                    minLength: 3
                    maxLength: 16
                password:
                    type: string
                    required: true
                    minLength: 8
                    format: password
                email:
                    type: string
                    required: true
                    example: hello@example.com
                    format: email
                firstname:
                    type: string
                    required: true
                lastname:
                    type: string
                    required: true
                phoneNumber:
                    type: string
                    example: '+49123456789'
        SearchResponse:
            type: object
            properties:
                ok:
                    type: boolean
                data:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: string
                                example: 00000000-0000-0000-0000-000000000000
                            username:
                                type: string
                            name:
                                type: string
        SuccessResponse:
            type: object
            properties:
                ok:
                    type: boolean
                data:
                    type: boolean
        FailureResponse:
            type: object
            properties:
                ok:
                    type: boolean
                data:
                    type: boolean
                    example: false
        ApiErrorResponse:
            type: object
            properties:
                ok:
                    type: boolean
                    default: false
                errors:
                    type: array
                    items:
                        type: object
                        properties:
                            code:
                                type: integer
                            message:
                                type: string
